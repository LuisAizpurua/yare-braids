---
import type { GetStaticPaths } from "astro";
import CardBraids from "src/components/braids-list/CardBraids.astro";
import FooterInfo from "src/components/footer-info/FooterInfo.astro";
import NavBar from "src/components/nav-components/NavBar.astro";
import Pagination from "src/components/pagination/Pagination.astro";
import type { braidsType } from "src/interface/braids.interface";
import Layout from "src/layouts/Layout.astro";

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  const base = import.meta.env.PUBLIC_BASE_URL;
  const response = await fetch(`${base}/api/getRoutes.json`);

  if (!response.ok) {
    throw new Error("Error al obtener los datos");
  }

  const dataAll = (await response.json()) as braidsType[];

  console.log("Datos obtenidos:", dataAll);
  return paginate(dataAll, { pageSize: 3 });
}) satisfies GetStaticPaths;

const { data, currentPage, url } = Astro.props.page;

---
<Layout>
  <NavBar />
  <Pagination {...url}/>
  <section
  class="flex flex-row flex-wrap justify-center items-center space-y-10 space-x-10"
  >
    {
      data.map(info => (<CardBraids data={info}/>))
    }
  </section>
  <FooterInfo />
</Layout>
